@function parseInt($n) {
    @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
    $px: ();
    $rem: ();

    @each $value in $values {

        @if $value==0 or $value==auto {
            $px: append($px, $value);
            $rem: append($rem, $value);
        }

        @else {
            $unit: unit($value);
            $val: parseInt($value);

            @if $unit=='px' {
                $px: append($px, $value);
                $rem: append($rem, ($val / 16 + rem));
            }

            @if $unit=='rem' {
                $px: append($px, ($val * 16 + px));
                $rem: append($rem, $value);
            }
        }
    }

    @if $px==$rem {
        #{$property}: $px;
    }

    @else {
        #{$property}: $px;
        #{$property}: $rem;
    }
}

body {
    margin: 0;
    font-family: 'Roboto', sans-serif;
}

.main-container {
    margin: 0 auto;
    max-width: 575.98px;
    height: 100vh;
    background-image: url(../images/background.png);
    background-size: cover;
    @include rem(padding-top, 25px);
    @include rem(padding-left, 18px);
    @include rem(padding-right, 25px);
    @include rem(padding-bottom, 25px);
}